service:
  name: devtool-plugins

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline
  # - serverless-apigw-binary
  # - serverless-apigwy-binary

custom:
  bucket: devtool-plugins
  dynamodb_table: DevTool-ApiKeys #${self:service.name}-${opt:stage, self:provider.stage}
  # apigwBinary: 
  #   types:
  #     - 'application/zip'
provider:
  name: aws
  runtime: nodejs8.10
  region: eu-central-1
  role: arn:aws:iam::283181639305:role/lambda_basic_execution
  apiKeys:
    - superAdminKey
  environment:
    # NODE_ENV: PRODUCTION
    BUCKET: ${self:custom.bucket}
    DYNAMODB_TABLE: ${self:custom.dynamodb_table}
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "s3:*"
       Resource: "arn:aws:s3:::${self:custom.bucket}/*"
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.dynamodb_table}"

functions:
  pluginsService:
    handler: handler.handle
    environment: 
      MAX_SIZE_LIMIT: '100000'
 
    events:
      - http:
          method: get
          path: plugins
          # private: true

      - http:
          method: post
          path: plugins
          # private: true
          # contentHandling: CONVERT_TO_TEXT

      - http:
          method: get
          path: plugins/{plugin}/download
          request:
            parameters:
              paths:
                plugin: true
          contentHandling: CONVERT_TO_BINARY
          # private: true

resources:
  Resources:
    DevToolPluginsS3Bucket:
      Type: 'AWS::S3::Bucket'
      Properties:
        BucketName: ${self:custom.bucket}
        # add additional custom bucket configuration here
    DevToolApiKeysDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: secret
            AttributeType: S
        KeySchema:
          -
            AttributeName: secret
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
